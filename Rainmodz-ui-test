local G2L = {}

-- Require G2L wrapper
local G2L_REQUIRE = require;
local G2L_MODULES = {};
local function require(Module: ModuleScript)
    local ModuleState = G2L_MODULES[Module];
    if ModuleState then
        if not ModuleState.Required then
            ModuleState.Required = true;
            ModuleState.Value = ModuleState.Closure();
        end
        return ModuleState.Value;
    end;
    return G2L_REQUIRE(Module);
end

-- Instances
G2L["0"] = Instance.new("ScreenGui")
G2L["1"] = Instance.new("Frame")
G2L["2"] = Instance.new("UICorner")
G2L["3"] = Instance.new("Frame")
G2L["4"] = Instance.new("TextButton")
G2L["5"] = Instance.new("TextLabel")
G2L["6"] = Instance.new("ImageButton")
G2L["7"] = Instance.new("UICorner")

-- Properties
G2L["0"].Name = [[ScreenGui]]
G2L["0"].Enabled = true
G2L["0"].ZIndexBehavior = Enum.ZIndexBehavior.Sibling
G2L["0"].Parent = game.Players.LocalPlayer.PlayerGui

G2L["1"].Name = [[Frame]]
G2L["1"].Active = true
G2L["1"].AnchorPoint = Vector2.new(0, 0)
G2L["1"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["1"].BackgroundTransparency = 0
G2L["1"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["1"].BorderSizePixel = 0
G2L["1"].ClipsDescendants = false
G2L["1"].Draggable = true
G2L["1"].Position = UDim2.new(0.2947214, 0, 0.25778332, 0)
G2L["1"].Rotation = 0
G2L["1"].Selectable = false
G2L["1"].SelectionOrder = 0
G2L["1"].Size = UDim2.new(0, 639, 0, 389)
G2L["1"].Visible = true
G2L["1"].ZIndex = 1
G2L["1"].Parent = G2L["0"]

G2L["2"].Name = [[UICorner]]
G2L["2"].CornerRadius = UDim.new(0, 3)
G2L["2"].Parent = G2L["1"]

G2L["3"].Name = [[Frame]]
G2L["3"].Active = false
G2L["3"].AnchorPoint = Vector2.new(0, 0)
G2L["3"].BackgroundColor3 = Color3.fromRGB(70, 70, 70)
G2L["3"].BackgroundTransparency = 0
G2L["3"].BorderColor3 = Color3.fromRGB(93, 93, 93)
G2L["3"].BorderSizePixel = 0
G2L["3"].ClipsDescendants = false
G2L["3"].Draggable = false
G2L["3"].Position = UDim2.new(0, 0, 0, 0)
G2L["3"].Rotation = 0
G2L["3"].Selectable = false
G2L["3"].SelectionOrder = 0
G2L["3"].Size = UDim2.new(0, 169, 0, 389)
G2L["3"].Visible = true
G2L["3"].ZIndex = 1
G2L["3"].Parent = G2L["1"]

G2L["4"].Name = [[TextButton]]
G2L["4"].FontFace = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["4"].Text = [[Button]]
G2L["4"].TextColor3 = Color3.fromRGB(0, 0, 0)
G2L["4"].TextScaled = false
G2L["4"].TextSize = 14
G2L["4"].TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
G2L["4"].TextStrokeTransparency = 1
G2L["4"].TextWrapped = false
G2L["4"].TextXAlignment = Enum.TextXAlignment.Center
G2L["4"].TextYAlignment = Enum.TextYAlignment.Center
G2L["4"].Active = true
G2L["4"].AnchorPoint = Vector2.new(0, 0)
G2L["4"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["4"].BackgroundTransparency = 0
G2L["4"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["4"].BorderSizePixel = 0
G2L["4"].ClipsDescendants = false
G2L["4"].Draggable = false
G2L["4"].Position = UDim2.new(0.07692308, 0, 0.1336761, 0)
G2L["4"].Rotation = 0
G2L["4"].Selectable = true
G2L["4"].SelectionOrder = 0
G2L["4"].Size = UDim2.new(0, 142, 0, 21)
G2L["4"].Visible = true
G2L["4"].ZIndex = 1
G2L["4"].Parent = G2L["3"]

G2L["5"].Name = [[TextLabel]]
G2L["5"].FontFace = Font.new([[rbxasset://fonts/families/Bangers.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
G2L["5"].Text = [[ Rainmodz]]
G2L["5"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["5"].TextScaled = true
G2L["5"].TextSize = 32
G2L["5"].TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
G2L["5"].TextStrokeTransparency = 1
G2L["5"].TextWrapped = true
G2L["5"].TextXAlignment = Enum.TextXAlignment.Center
G2L["5"].TextYAlignment = Enum.TextYAlignment.Center
G2L["5"].Active = false
G2L["5"].AnchorPoint = Vector2.new(0, 0)
G2L["5"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
G2L["5"].BackgroundTransparency = 0
G2L["5"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["5"].BorderSizePixel = 0
G2L["5"].ClipsDescendants = false
G2L["5"].Draggable = false
G2L["5"].Position = UDim2.new(0, 0, 0, 0)
G2L["5"].Rotation = 0
G2L["5"].Selectable = false
G2L["5"].SelectionOrder = 0
G2L["5"].Size = UDim2.new(0, 169, 0, 30)
G2L["5"].Visible = true
G2L["5"].ZIndex = 1
G2L["5"].Parent = G2L["1"]

G2L["6"].Name = [[ImageButton]]
G2L["6"].Image = [[rbxassetid://98163361288694]]
G2L["6"].ImageColor3 = Color3.fromRGB(255, 255, 255)
G2L["6"].ScaleType = Enum.ScaleType.Stretch
G2L["6"].SliceCenter = Rect.new(0, 0, 0, 0)
G2L["6"].TileSize = UDim2.new(1, 0, 1, 0)
G2L["6"].Active = true
G2L["6"].AnchorPoint = Vector2.new(0, 0)
G2L["6"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
G2L["6"].BackgroundTransparency = 0
G2L["6"].BorderColor3 = Color3.fromRGB(0, 0, 0)
G2L["6"].BorderSizePixel = 0
G2L["6"].ClipsDescendants = false
G2L["6"].Draggable = false
G2L["6"].Position = UDim2.new(0.22873901, 0, 0.16936488, 0)
G2L["6"].Rotation = 0
G2L["6"].Selectable = true
G2L["6"].SelectionOrder = 0
G2L["6"].Size = UDim2.new(0, 90, 0, 71)
G2L["6"].Visible = true
G2L["6"].ZIndex = 1
G2L["6"].Parent = G2L["0"]

G2L["7"].Name = [[UICorner]]
G2L["7"].CornerRadius = UDim.new(0, 8)
G2L["7"].Parent = G2L["6"]

-- Add functionality for toggling and draggable GUI
local UIS = game:GetService("UserInputService")
local player = game.Players.LocalPlayer
local gui = G2L["0"]
local frame = G2L["1"]

-- Variable to toggle visibility
local guiOpen = true

-- Toggle GUI visibility with a key (e.g., "P")
UIS.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.P then
        guiOpen = not guiOpen
        frame.Visible = guiOpen
    end
end)

-- Enable dragging functionality
local dragging
local dragStart
local startPos

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

frame.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

return G2L["0"], require
